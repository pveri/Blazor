@inject IJSRuntime js
<h3>MovieList</h3>
<input type="checkbox" @bind="displayButtons" />

<GenericList List="Movies">
    <NullTemplate>
        <text>Loading...</text>
        <img src="https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/200.gif" />
    </NullTemplate>
    <ElementTemplate>
        <SingleMovie movie="context" DisplayButtons="displayButtons"
                     DeleteMovie="DeleteMovie"></SingleMovie>
    </ElementTemplate>
</GenericList>
    

@code{
    [Parameter] public List<Movie> Movies { get; set; }
    [Parameter] public RenderFragment NullTemplate { get; set; }
    [Parameter] public RenderFragment EmptyTemplate { get; set; }
    bool displayButtons = false;

    private async Task DeleteMovie(Movie movie)
    {
        //js.
        // InvokeAsync<bool>("confirm", $"Are you sure you want to delete{movie.Title}?");
        await js.MyFunction();
        if (await js.Confirm($"Are you sure you want to delete{movie.Title}?"))
        Movies.Remove(movie);
    }

    protected override void OnInitialized()
    {
        Console.WriteLine("In OnInitialized(): " + Movies.Count.ToString());
        base.OnInitialized();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        Console.WriteLine("In OnAfterRender(): " + Movies.Count.ToString());
        base.OnAfterRender(firstRender);
    }

    protected override void OnParametersSet()
    {
        Console.WriteLine("In OnParameterSet(): " + Movies.Count.ToString());
    }

}
